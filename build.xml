<?xml version="1.0"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!-- 
Before you can run these subtargets directly, you need 
to call at top-level: ant deploy-contrib compile-core-test
-->
<project name="dumbo" default="jar">

  <property name="src.test" location="${basedir}/src/test/java"/>

  <!-- dummy compile target -->
  <target name="compile" />

  <import file="../build-contrib.xml" optional="true" />

  <!-- Override jar target to specify main class -->
  <target name="jar" depends="compile">
    <jar
      jarfile="${build.dir}/hadoop-${version}-${name}.jar"
      basedir="${build.classes}"
    >
      <manifest>
        <attribute name="Main-Class" value="org.apache.hadoop.dumbo.Launcher"/>
      </manifest>
    </jar>
  </target>

  <target name="install_pymod">
    <exec executable="/bin/sh">
      <arg value="-c" />
      <arg value="cd ${basedir}/src/python/; python setup.py install; python setup.py clean -a" />
    </exec>
  </target>

  <target name="test_pymod">
    <exec executable="/bin/sh" resultproperty="pymodtest.failedTests">
      <arg value="-c" />
      <arg value="cd ${basedir}/src/test/python/; python main.py" />
    </exec>
    <exec executable="/bin/sh">
      <arg value="-c" />
      <arg value="cd ${basedir}/src/test/python/; rm *.pyc" />
    </exec>
    <condition property="pymodtest.success">
      <equals arg1="${pymodtest.failedTests}" arg2="0"/>
    </condition>
    <fail message="TestCases failed. ${pymodtest.failedTests} failed to run successfully." unless="pymodtest.success"/>
  </target>

</project>
